{"version":3,"sources":["components/IngredientsDetail.js","components/Recipe.js","components/Alert.js","App.js","index.js"],"names":["IngredientsDetail","propsIngredients","map","ingredient","key","uuidv4","className","text","weight","Recipe","propsRecipe","useState","show","setShow","recipe","label","image","url","ingredients","src","alt","type","name","href","target","rel","onClick","Alert","propsAlert","App","query","setQuery","recipes","setRecipes","alert","setAlert","getData","a","Axios","get","result","data","more","hits","console","log","onSubmit","event","preventDefault","onChange","value","id","htmlFor","item","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wQAoBeA,G,MAjBW,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,iBAC3B,OACE,6BACGA,EAAiBC,KAAI,SAACC,GAAD,OACpB,yBAAKC,IAAKC,cAAUC,UAAU,kBAC5B,4BACE,4BAAKH,EAAWI,MAChB,4BACE,0BAAMD,UAAU,cAAhB,WADF,IAC+CH,EAAWK,gBCiCvDC,EAzCA,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YAAkB,EAEVC,oBAAS,GAFC,mBAE3BC,EAF2B,KAErBC,EAFqB,OAOSH,EAAYI,OAA/CC,EAP0B,EAO1BA,MAAOC,EAPmB,EAOnBA,MAAOC,EAPY,EAOZA,IAAKC,EAPO,EAOPA,YAE3B,OACE,yBAAKZ,UAAU,cACb,4BAAKS,GACL,yBAAKI,IAAKH,EAAOI,IAAKL,IAEtB,yBAAKT,UAAU,gBAEb,4BACEA,UAAU,6CACVe,KAAK,SACLC,KAAK,UAEL,uBAAGC,KAAMN,EAAKO,OAAO,SAASC,IAAI,uBAAlC,QAMF,4BACEnB,UAAU,+BACVe,KAAK,SACLC,KAAK,SACLI,QAAS,kBAAMb,GAASD,KAJ1B,gBASDA,GAAQ,kBAAC,EAAD,CAAmBX,iBAAkBiB,MC7BrCS,EARD,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WACf,OACE,yBAAKtB,UAAU,eACb,2BAAIsB,KCyFKC,MAtFf,WAAe,MAEalB,mBAAS,IAFtB,mBAENmB,EAFM,KAECC,EAFD,OAGiBpB,mBAAS,IAH1B,mBAGNqB,EAHM,KAGGC,EAHH,OAMatB,mBAAS,IANtB,mBAMNuB,EANM,KAMCC,EAND,KAUPlB,EAAG,0CAAsCa,EAAtC,mBAFM,WAEN,oBADO,oCAIVM,EAAO,uCAAG,4BAAAC,EAAA,yDAEA,KAAVP,EAFU,iCAGSQ,IAAMC,IAAItB,GAHnB,WAGNuB,EAHM,QAMAC,KAAKC,KANL,yCAOHP,EAAS,2BAPN,OAUZF,EAAWO,EAAOC,KAAKE,MAGvBR,EAAS,IACTJ,EAAS,IAETa,QAAQC,IAAIL,GAhBA,wBAkBZL,EAAS,wBAlBG,4CAAH,qDAiCb,OACE,6BACE,iDACW,KAAVD,GAAgB,kBAAC,EAAD,CAAON,WAAYM,IACpC,0BAAM5B,UAAU,cAAcwC,SAdb,SAACC,GACpBA,EAAMC,iBACNZ,MAaI,yBAAK9B,UAAU,qCACb,2BACEe,KAAK,OACLC,KAAK,SACL2B,SAbW,SAACF,GACpBhB,EAASgB,EAAMvB,OAAO0B,QAadA,MAAOpB,EACPqB,GAAG,qBACH7C,UAAU,iBAEZ,2BAAO8C,QAAQ,sBAAf,oBAEF,4BACE9C,UAAU,+BACVe,KAAK,SACLC,KAAK,UAHP,WAUF,yBAAKhB,UAAU,WACZ0B,IAAY,IACXA,EAAQ9B,KAAI,SAACmD,GAAD,OAAU,kBAAC,EAAD,CAAQjD,IAAKC,cAAUK,YAAa2C,QAG9D,6BAEA,yBAAK/C,UAAU,aACb,8DCpFRgD,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.2ae9b5b4.chunk.js","sourcesContent":["import React from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nconst IngredientsDetail = ({ propsIngredients }) => {\r\n  return (\r\n    <div>\r\n      {propsIngredients.map((ingredient) => (\r\n        <div key={uuidv4()} className=\"ingredient-box\">\r\n          <ul>\r\n            <li>{ingredient.text}</li>\r\n            <li>\r\n              <span className=\"otherColor\">weight:</span> {ingredient.weight}\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default IngredientsDetail;\r\n","import React, { useState } from 'react';\r\nimport IngredientsDetail from './IngredientsDetail';\r\n\r\nconst Recipe = ({ propsRecipe }) => {\r\n  /* REACT HOOKS — TOOGLE ELEMENT */\r\n  const [show, setShow] = useState(false);\r\n\r\n  /* PROPS FROM 'recipe' ARRAY\r\n     REMEMBER: propsRecipe = 'hits' > 'recipe\r\n  */\r\n  const { label, image, url, ingredients } = propsRecipe.recipe;\r\n\r\n  return (\r\n    <div className=\"per-recipe\">\r\n      <h2>{label}</h2>\r\n      <img src={image} alt={label} />\r\n\r\n      <div className=\"button-style\">\r\n        {/* BUTTON: URL */}\r\n        <button\r\n          className=\"btn waves-effect waves-light margin-resize\"\r\n          type=\"submit\"\r\n          name=\"action\"\r\n        >\r\n          <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n            URL\r\n          </a>\r\n        </button>\r\n\r\n        {/* BUTTON: INGREDIENTS */}\r\n        <button\r\n          className=\"btn waves-effect waves-light\"\r\n          type=\"submit\"\r\n          name=\"action\"\r\n          onClick={() => setShow(!show)}\r\n        >\r\n          Ingredients\r\n        </button>\r\n      </div>\r\n      {show && <IngredientsDetail propsIngredients={ingredients} />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Recipe;\r\n","import React from 'react';\r\n\r\nconst Alert = ({ propsAlert }) => {\r\n  return (\r\n    <div className=\"alert-empty\">\r\n      <p>{propsAlert}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Alert;\r\n","import React, { useState } from 'react';\nimport Axios from 'axios';\nimport { v4 as uuidv4 } from 'uuid';\nimport './App.scss';\n\nimport Recipe from './components/Recipe';\nimport Alert from './components/Alert';\n\nfunction App() {\n  /* REACT HOOKS */\n  const [query, setQuery] = useState('');\n  const [recipes, setRecipes] = useState([]);\n\n  /* REACT HOOKS — ALERT DISPLAY */\n  const [alert, setAlert] = useState('');\n\n  const APP_ID = '214eaa94';\n  const APP_KEY = 'a98bbd900f15abf1982ca922fb79ab3d';\n  const url = `https://api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}`;\n\n  /* (3) AXIOS.GET | GET ALL RECIPE API DATA*/\n  const getData = async () => {\n    /* CONDITIONAL STATEMENT FOR ALERT MESSAGE */\n    if (query !== '') {\n      const result = await Axios.get(url);\n\n      /* IF DATA NOT EXIST */\n      if (!result.data.more) {\n        return setAlert('No food with such name');\n      }\n      /* SET METHOD TO HANDLE 'hits' ARRAY FROM RECIPE API */\n      setRecipes(result.data.hits);\n\n      /* SET METHOD TO CLEAR ALERT | INPUT FIELD AFTER BUTTON CLICKED */\n      setAlert('');\n      setQuery('');\n\n      console.log(result);\n    } else {\n      setAlert('Please Fill the Form');\n    }\n  };\n\n  /* (2) AXIOS.GET | GET RECIPE DATA UPON CLICKING BUTTON */\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    getData();\n  };\n\n  /* (1) FIELD SEARCH — GET DATA FROM INPUTFIELD [onChange] && SEARCH THE CORRECT DATA USING 'setQuery()' > '${query}' */\n  const handleChange = (event) => {\n    setQuery(event.target.value);\n  };\n\n  return (\n    <div>\n      <h1>Recipe Search App</h1>\n      {alert !== '' && <Alert propsAlert={alert} />}\n      <form className=\"search-form\" onSubmit={handleSubmit}>\n        <div className=\"input-field col s12 margin-resize\">\n          <input\n            type=\"text\"\n            name=\"search\"\n            onChange={handleChange}\n            value={query}\n            id=\"autocomplete-input\"\n            className=\"autocomplete\"\n          />\n          <label htmlFor=\"autocomplete-input\">Search Recipe..</label>\n        </div>\n        <button\n          className=\"btn waves-effect waves-light\"\n          type=\"submit\"\n          name=\"action\"\n        >\n          Search\n        </button>\n      </form>\n\n      {/* SINCE 'setRecipes()' DIRECTLY GOES TO 'hits' ARRAY, WE CAN CALL THE NEXT PROPERTIES INSIDE 'hits' */}\n      <div className=\"recipes\">\n        {recipes !== [] &&\n          recipes.map((item) => <Recipe key={uuidv4()} propsRecipe={item} />)}\n      </div>\n\n      <br />\n      {/* COPYRIGHT */}\n      <div className=\"copyright\">\n        <p>Copyright 2020 © kimiberi</p>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}